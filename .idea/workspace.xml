<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ab0b9de4-f4f9-478b-a014-e2106a8cb43b" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/APIDiscoveryService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/APIDiscoveryService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AccountService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AccountService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AddressService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AddressService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AffinityGroupService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AffinityGroupService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AlertService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AlertService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AnnotationService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AnnotationService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AsyncjobService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AsyncjobService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AuthenticationService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AuthenticationService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AutoScaleService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/AutoScaleService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BaremetalService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BaremetalService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BigSwitchBCFService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BigSwitchBCFService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BrocadeVCSService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/BrocadeVCSService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CertificateService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CertificateService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CloudIdentifierService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CloudIdentifierService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ClusterService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ClusterService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ConfigurationService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ConfigurationService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CustomService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/CustomService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/DiskOfferingService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/DiskOfferingService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/DomainService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/DomainService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/EventService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/EventService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/FirewallService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/FirewallService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/GuestOSService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/GuestOSService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/HostService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/HostService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/HypervisorService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/HypervisorService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ISOService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ISOService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ImageStoreService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ImageStoreService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/InfrastructureUsageService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/InfrastructureUsageService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/InternalLBService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/InternalLBService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/KubernetesService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/KubernetesService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LDAPService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LDAPService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LimitService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LimitService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LoadBalancerService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/LoadBalancerService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NATService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NATService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkACLService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkACLService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkDeviceService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkDeviceService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkOfferingService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkOfferingService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NetworkService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NicService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NicService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NiciraNVPService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/NiciraNVPService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/OutofbandManagementService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/OutofbandManagementService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/OvsElementService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/OvsElementService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PodService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PodService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PoolService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PoolService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PortableIPService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/PortableIPService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ProjectService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ProjectService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/QuotaService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/QuotaService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RegionService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RegionService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ResourcemetadataService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ResourcemetadataService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ResourcetagsService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ResourcetagsService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RoleService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RoleService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RouterService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/RouterService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SSHService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SSHService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SecurityGroupService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SecurityGroupService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ServiceOfferingService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ServiceOfferingService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SnapshotService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SnapshotService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/StoragePoolService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/StoragePoolService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/StratosphereSSPService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/StratosphereSSPService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SwiftService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SwiftService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SystemCapacityService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SystemCapacityService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SystemVMService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/SystemVMService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/TemplateService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/TemplateService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UCSService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UCSService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UsageService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UsageService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UserService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/UserService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VLANService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VLANService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VMGroupService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VMGroupService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VPCService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VPCService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VPNService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VPNService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VirtualMachineService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VirtualMachineService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VolumeService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/VolumeService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ZoneService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/ZoneService_mock.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/cloudstack/cloudstack.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/app/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/app/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/conf/conf.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/conf/conf.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/conf/environment.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/conf/environment.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/workers/capacities_worker.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/workers/capacities_worker.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/golang" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2L09GBF18dqy1gkkzUVmwJO6ONb" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;configurable..is.expanded&quot;: &quot;false&quot;,
    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/emil/repos/cloudstack-go&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\repos\work\landing-api-v2\utils" />
      <recent name="C:\repos\work\landing-api-v2\pkg" />
      <recent name="C:\repos\work\landing-api-v2\routers" />
      <recent name="C:\repos\work\landing-api-v2\models" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/service" />
      <recent name="C:\repos\work\landing-api-v2\utils\requestutils" />
      <recent name="C:\repos\work\landing-api-v2\routers\api\v2" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="landing-api-v2" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="run" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="landing-api-v2" />
      <working_directory value="$PROJECT_DIR$" />
      <envs>
        <env name="LANDING_CONFIG_FILE" value="$PROJECT_DIR$/../admin/secrets/landing/landing-config.yml" />
      </envs>
      <kind value="PACKAGE" />
      <package value="landing-api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="landing-api-v2" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/apache/cloudstack-go/v2@v2.13.2/cloudstack/KubernetesService.go</url>
          <line>875</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>